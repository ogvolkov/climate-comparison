name: Build and Deploy
on: 
  push: 
    branches: 
      - main
      - feature/*
      - github_actions

jobs:
  configure-environment:
    name: Configure environment
    runs-on: ubuntu-latest
    outputs:
      REACT_APP_API_URL: ${{ steps.configure-environment.outputs.REACT_APP_API_URL }}
      deployment_target: ${{ steps.configure-environment.outputs.deployment_target }}
    steps:
      - name: Configure environment
        id: configure-environment
        uses: actions/github-script@v6
        with: 
          script: |
            if (context.ref === 'refs/heads/main') {
              core.setOutput('REACT_APP_API_URL', '${{ vars.PROD_API_URL }}')
              core.setOutput('deployment_target', 'prod')
            } else {
              core.setOutput('REACT_APP_API_URL', '${{ vars.BETA_API_URL }}')
              core.setOutput('deployment_target', 'beta')
            }

  build-backend:
    name: Build backend
    runs-on: ubuntu-latest
    env:
      buildConfiguration: 'Release'
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '2.1.x'
      - name: 'dotnet build'
        run: dotnet build --configuration $buildConfiguration 
      - name: 'dotnet publish'
        run: dotnet publish --output ${{ github.workspace }}/backend_output 
      - name: Upload backend
        uses: actions/upload-artifact@v3
        with:
          name: backend
          path: ${{ github.workspace }}/backend_output


  build-frontend:
    name: Build frontend
    runs-on: ubuntu-latest
    needs: [configure-environment]
    defaults:
      run:
        working-directory: frontend
    env:
      REACT_APP_API_URL: ${{ needs.configure-environment.outputs.REACT_APP_API_URL }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - name: 'npm install'
        run: npm install
      - name: 'npm build'
        run: npm run build
      - name: Upload frontend
        uses: actions/upload-artifact@v3
        with:
          name: frontend
          path: ${{ github.workspace }}/frontend/build

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend, configure-environment]
    environment: 
      name: ${{ needs.configure-environment.outputs.deployment_target }}
    steps:
      - name: Download backend
        uses: actions/download-artifact@v3
        with:
          name: backend
          path: backend_output
      - name: Download frontend
        uses: actions/download-artifact@v3
        with:
          name: frontend
          path: frontend_output
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy Frontent
        run: |
          az storage blob upload-batch -d '$web' -s frontend_output --account-name ${{ vars.WEBSITE_STORAGE_ACCOUNT }} --account-key ${{ secrets.WEBSITE_STORAGE_ACCOUNT_KEY }} --overwrite true
      - name: Deploy Backend
        uses: Azure/webapps-deploy@v2
        with:
          app-name: ${{ vars.APP_SERVICE_NAME }}
          package: backend_output

